{
  "contractName": "DeedRepository",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_by",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "DeedRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "registerDeed",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "addDeedMetadata",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_by\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"DeedRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addDeedMetadata\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"registerDeed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"addDeedMetadata(uint256,string)\":{\"details\":\"Public function to add metadata to a deed\",\"params\":{\"_tokenId\":\"represents a specific deed\",\"_uri\":\"text which describes the characteristics of a given deed\"},\"return\":\"whether the deed metadata was added to the repository\"},\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token IDThe zero address indicates there is no approved address.There can only be one approved address per token at a given time.Can only be called by the token owner or an approved operator.\",\"params\":{\"_to\":\"address to be approved for the given token ID\",\"_tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address\",\"params\":{\"_owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"constructor\":{\"details\":\"Created a DeedRepository with a name and symbol\",\"params\":{\"_name\":\"string represents the name of the repository\",\"_symbol\":\"string represents the symbol of the repository\"}},\"exists(uint256)\":{\"details\":\"Returns whether the specified token exists\",\"params\":{\"_tokenId\":\"uint256 ID of the token to query the existance of\"},\"return\":\"whether the token exists\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set\",\"params\":{\"_tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for a the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"_operator\":\"operator address which you want to query the approval of\",\"_owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"name()\":{\"details\":\"Gets the token name\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID\",\"params\":{\"_tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"owner address currently marked as the owner of the given token ID\"},\"registerDeed(uint256,string)\":{\"details\":\"Public function to register a new deedCall the ERC721Token minter\",\"params\":{\"_tokenId\":\"uint256 represents a specific deed\",\"_uri\":\"string containing metadata/uri\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another addressIf the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted.Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"_from\":\"current owner of the token\",\"_to\":\"address to receive the ownership of the given token ID\",\"_tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another addressIf the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted.Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"_from\":\"current owner of the token\",\"_to\":\"address to receive the ownership of the given token ID\",\"_tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operatorAn operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"_approved\":\"representing the status of the approval to be set\",\"_to\":\"operator address to set the approval\"}},\"symbol()\":{\"details\":\"Gets the token symbol\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contractReverts if the index is greater or equal to the total number of tokens\",\"params\":{\"_index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"_index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"_owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token IDThrows if the token ID does not exist. May return an empty string.\",\"params\":{\"_tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another addressUsage of this method is discouraged, use `safeTransferFrom` whenever possibleRequires the msg sender to be the owner, approved, or operator\",\"params\":{\"_from\":\"current owner of the token\",\"_to\":\"address to receive the ownership of the given token ID\",\"_tokenId\":\"uint256 ID of the token to be transferred\"}}},\"title\":\"Repository of ERC721 Deeds This contract contains the list of deeds registered by users. This is a demo to show how tokens (deeds) can be minted and added  to the repository.\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/DeedRepository.sol\":\"DeedRepository\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/DeedRepository.sol\":{\"keccak256\":\"0x06e5a9e04ed0db58223f07ecf285f49f537ef4889b6412e6124776687a11f9b8\",\"urls\":[\"bzz-raw://96e8f599b1555751f220d794d9300c2a6eb6d4872f8e5d1da8398b22ee0e09be\",\"dweb:/ipfs/QmPubdsLoMtwTk9u5ozB8fq7ohaf8UJXPrqahgJU2rgXEN\"]},\"project:/contracts/ERC721/DeprecatedERC721.sol\":{\"keccak256\":\"0xc89a5a7c97ac6f9a98dc43f1961d5bef19cf549bef0bb083e00b946484601e85\",\"urls\":[\"bzz-raw://377a488dde6bcd2744bf30fcd2166e86a19257d2324975f059697946f00e474c\",\"dweb:/ipfs/QmRfAETDCHZqxZSmKNLFK7NsRByHHXVMg14Nz5Guy45LLS\"]},\"project:/contracts/ERC721/ERC721.sol\":{\"keccak256\":\"0x01fcde3560e5ae146e09fcd3627ba1a09ce0185f3b6008572fb361a41ef14378\",\"urls\":[\"bzz-raw://d0a07b13a493ba50837490eacd878ad2bf3de44ede91e8c4c3c3761ae193105c\",\"dweb:/ipfs/QmcF1NWM5tnG5wD4Lid9ttYsyJYxm2PAoJJb2ig3HvN5Dn\"]},\"project:/contracts/ERC721/ERC721Basic.sol\":{\"keccak256\":\"0x6bfea8f187e0a9640ac9a9b6290436b6c99bbe473c1463d8f8ce36ee9d19c125\",\"urls\":[\"bzz-raw://e30c2fba70c9894242a2f34595a160a4afea156eee8cb18bc58ed7b199d28124\",\"dweb:/ipfs/QmTsjPX17w8Px3WWpWq2C4V3FpNiDYjJCUxbznxTQkoMzm\"]},\"project:/contracts/ERC721/ERC721BasicToken.sol\":{\"keccak256\":\"0xc2fd160cbbab4b6d276d5a793b90f86f95b915498b1cbb6d2badff344d2725e5\",\"urls\":[\"bzz-raw://b025c362b7ca6529d97ebb2300f29ea12dcd37210c7f0adad195e06579b7b2f4\",\"dweb:/ipfs/QmcxypLaNb4fJPRARCnuyZWmorW1unxxvkrYsCRSTJMxQt\"]},\"project:/contracts/ERC721/ERC721Receiver.sol\":{\"keccak256\":\"0xf9db8b47edefef8a11b8310cef537c792437f74a54a5f73e8ad033eb6dfddbc1\",\"urls\":[\"bzz-raw://93b4092745fde35cf6fa9cb0f6cde4112730b075f71ddf3e2734e7f71eafcdbd\",\"dweb:/ipfs/QmRiypHpxxdkc4PME69fz29fMJKmrcHyxAonHo2wMxHcU5\"]},\"project:/contracts/ERC721/ERC721Token.sol\":{\"keccak256\":\"0xd0109d67f891231c83874db6318fca85d87ed1ee2806b61cab2acd8770c6b642\",\"urls\":[\"bzz-raw://527002ccb618cf0a7b9c1aaf64d6a733a8a35f49f57f1c69d2299224e3188158\",\"dweb:/ipfs/QmV9vUNqHqKJr6W4qs9hX9qvvDnMiWVA2nx1bUvEqY6RYd\"]},\"project:/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0xc01829124fa778376cd6ad28f3cd8b88ca4044368e61cdbc6d064de2444b0ff6\",\"urls\":[\"bzz-raw://b63ca98198725532bc302ed0feb3d2113b3bdace7bec2bf4dc462355a03132f2\",\"dweb:/ipfs/Qmdpc9zQ9vMERgd8AFr4tGUSKpJ35GszLYbecKDyPMuLGy\"]},\"project:/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x7bd2e97f7d9afb422b7526509efa74b872b0f83b03b2dfb9363e7cea8fc0e534\",\"urls\":[\"bzz-raw://ed6f844a19f987709c6348545d447d6e9e27e80d97cd23d324ea07c219f377fb\",\"dweb:/ipfs/QmNk8in3Pjfbt1mLgtgAKV41stpYSNajYEVQtuqFDh67gv\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c80636352211e116100a2578063b88d4fde11610071578063b88d4fde14610378578063c87b56dd1461043e578063da5560331461045b578063e985e9c514610508578063f72439dd1461053657610116565b80636352211e146102ff57806370a082311461031c57806395d89b4114610342578063a22cb4651461034a57610116565b806323b872dd116100e957806323b872dd146102195780632f745c591461024f57806342842e0e1461027b5780634f558e79146102b15780634f6ccce7146102e257610116565b806306fdde031461011b578063081812fc14610198578063095ea7b3146101d157806318160ddd146101ff575b600080fd5b6101236105e3565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561015d578181015183820152602001610145565b50505050905090810190601f16801561018a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101b5600480360360208110156101ae57600080fd5b503561067a565b604080516001600160a01b039092168252519081900360200190f35b6101fd600480360360408110156101e757600080fd5b506001600160a01b038135169060200135610695565b005b61020761077e565b60408051918252519081900360200190f35b6101fd6004803603606081101561022f57600080fd5b506001600160a01b03813581169160208101359091169060400135610784565b6102076004803603604081101561026557600080fd5b506001600160a01b03813516906020013561082d565b6101fd6004803603606081101561029157600080fd5b506001600160a01b0381358116916020810135909116906040013561087a565b6102ce600480360360208110156102c757600080fd5b50356108af565b604080519115158252519081900360200190f35b610207600480360360208110156102f857600080fd5b50356108cc565b6101b56004803603602081101561031557600080fd5b5035610900565b6102076004803603602081101561033257600080fd5b50356001600160a01b0316610928565b610123610959565b6101fd6004803603604081101561036057600080fd5b506001600160a01b03813516906020013515156109ba565b6101fd6004803603608081101561038e57600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156103c957600080fd5b8201836020820111156103db57600080fd5b803590602001918460018302840111640100000000831117156103fd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610a3e945050505050565b6101236004803603602081101561045457600080fd5b5035610a79565b6102ce6004803603604081101561047157600080fd5b8135919081019060408101602082013564010000000081111561049357600080fd5b8201836020820111156104a557600080fd5b803590602001918460018302840111640100000000831117156104c757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610b2c945050505050565b6102ce6004803603604081101561051e57600080fd5b506001600160a01b0381358116916020013516610b41565b6101fd6004803603604081101561054c57600080fd5b8135919081019060408101602082013564010000000081111561056e57600080fd5b82018360208201111561058057600080fd5b803590602001918460018302840111640100000000831117156105a257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610b6f945050505050565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561066f5780601f106106445761010080835404028352916020019161066f565b820191906000526020600020905b81548152906001019060200180831161065257829003601f168201915b505050505090505b90565b6000908152600160205260409020546001600160a01b031690565b60006106a082610900565b9050806001600160a01b0316836001600160a01b031614156106c157600080fd5b336001600160a01b03821614806106dd57506106dd8133610b41565b6106e657600080fd5b60006106f18361067a565b6001600160a01b031614158061070f57506001600160a01b03831615155b156107795760008281526001602090815260409182902080546001600160a01b0319166001600160a01b03878116918217909255835186815293519093918516927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a35b505050565b60085490565b8061078f3382610bc3565b61079857600080fd5b6001600160a01b0384166107ab57600080fd5b6001600160a01b0383166107be57600080fd5b6107c88483610c22565b6107d28483610cc3565b6107dc8383610df5565b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a350505050565b600061083883610928565b821061084357600080fd5b6001600160a01b038316600090815260066020526040902080548390811061086757fe5b9060005260206000200154905092915050565b806108853382610bc3565b61088e57600080fd5b6108a984848460405180602001604052806000815250610a3e565b50505050565b6000908152602081905260409020546001600160a01b0316151590565b60006108d661077e565b82106108e157600080fd5b600882815481106108ee57fe5b90600052602060002001549050919050565b6000818152602081905260408120546001600160a01b03168061092257600080fd5b92915050565b60006001600160a01b03821661093d57600080fd5b506001600160a01b031660009081526002602052604090205490565b60058054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561066f5780601f106106445761010080835404028352916020019161066f565b6001600160a01b0382163314156109d057600080fd5b3360008181526003602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b81610a493382610bc3565b610a5257600080fd5b610a5d858585610784565b610a6985858585610e3b565b610a7257600080fd5b5050505050565b6060610a84826108af565b610a8d57600080fd5b6000828152600a602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529091830182828015610b205780601f10610af557610100808354040283529160200191610b20565b820191906000526020600020905b815481529060010190602001808311610b0357829003601f168201915b50505050509050919050565b6000610b388383610f64565b50600192915050565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205460ff1690565b610b793383610f95565b610b838282610b2c565b50604080513381526020810184905281517f32cc5b866d6a5990a7f987020b639157969cb963b9beb2cdf41df22ab152df35929181900390910190a15050565b600080610bcf83610900565b9050806001600160a01b0316846001600160a01b03161480610c0a5750836001600160a01b0316610bff8461067a565b6001600160a01b0316145b80610c1a5750610c1a8185610b41565b949350505050565b816001600160a01b0316610c3582610900565b6001600160a01b031614610c4857600080fd5b6000818152600160205260409020546001600160a01b031615610cbf57600081815260016020908152604080832080546001600160a01b0319169055805184815290516001600160a01b038616927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a35b5050565b610ccd8282610fe4565b6000818152600760209081526040808320546001600160a01b03861684526006909252822054909190610d0790600163ffffffff61106c16565b6001600160a01b03851660009081526006602052604081208054929350909183908110610d3057fe5b906000526020600020015490508060066000876001600160a01b03166001600160a01b031681526020019081526020016000208481548110610d6e57fe5b60009182526020808320909101929092556001600160a01b0387168152600690915260408120805484908110610da057fe5b60009182526020808320909101929092556001600160a01b0387168152600690915260409020805490610dd790600019830161117e565b50600093845260076020526040808520859055908452909220555050565b610dff828261107e565b6001600160a01b039091166000908152600660209081526040808320805460018101825590845282842081018590559383526007909152902055565b6000610e4f846001600160a01b0316611100565b610e5b57506001610c1a565b60405163785cf2dd60e11b81526001600160a01b0386811660048301908152602483018690526060604484019081528551606485015285516000949389169363f0b9e5ba938b938a938a936084019060208501908083838d5b83811015610ecc578181015183820152602001610eb4565b50505050905090810190601f168015610ef95780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b158015610f1a57600080fd5b505af1158015610f2e573d6000803e3d6000fd5b505050506040513d6020811015610f4457600080fd5b50516001600160e01b03191663785cf2dd60e11b14915050949350505050565b610f6d826108af565b610f7657600080fd5b6000828152600a602090815260409091208251610779928401906111a2565b610f9f8282611106565b600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3015550565b816001600160a01b0316610ff782610900565b6001600160a01b03161461100a57600080fd5b6001600160a01b03821660009081526002602052604090205461103490600163ffffffff61106c16565b6001600160a01b03909216600090815260026020908152604080832094909455918152908190522080546001600160a01b0319169055565b60008282111561107857fe5b50900390565b6000818152602081905260409020546001600160a01b0316156110a057600080fd5b60008181526020818152604080832080546001600160a01b0319166001600160a01b038716908117909155835260029091529020546110e0906001611168565b6001600160a01b0390921660009081526002602052604090209190915550565b3b151590565b6001600160a01b03821661111957600080fd5b6111238282610df5565b6040805182815290516001600160a01b038416916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60008282018381101561117757fe5b9392505050565b81548183558181111561077957600083815260209020610779918101908301611220565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106111e357805160ff1916838001178555611210565b82800160010185558215611210579182015b828111156112105782518255916020019190600101906111f5565b5061121c929150611220565b5090565b61067791905b8082111561121c576000815560010161122656fea265627a7a72315820c6d1d567e8fc43cb1b91252a011db2fe0fabb5c21874ae44c5bac96c361e89c964736f6c63430005100032",
  "sourceMap": "272:1465:1:-;;;533:103;8:9:-1;5:2;;;30:1;27;20:12;5:2;533:103:1;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;533:103:1;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;533:103:1;;420:4:-1;411:14;;;;533:103:1;;;;;411:14:-1;533:103:1;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;533:103:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;533:103:1;;420:4:-1;411:14;;;;533:103:1;;;;;411:14:-1;533:103:1;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;533:103:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;533:103:1;;-1:-1:-1;;1214:13:8;;618:5:1;;-1:-1:-1;625:7:1;;1214:13:8;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1234:17:8;;;;:7;;:17;;;;;:::i;:::-;;1144:113;;533:103:1;;272:1465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;272:1465:1;;;-1:-1:-1;272:1465:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "272:1465:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;272:1465:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1354:77:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1354:77:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3691:113:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3691:113:5;;:::i;:::-;;;;-1:-1:-1;;;;;3691:113:5;;;;;;;;;;;;;;3091:364;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3091:364:5;;;;;;;;:::i;:::-;;2641:89:8;;;:::i;:::-;;;;;;;;;;;;;;;;5194:325:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5194:325:5;;;;;;;;;;;;;;;;;:::i;2316:180:8:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2316:180:8;;;;;;;;:::i;6139:189:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6139:189:5;;;;;;;;;;;;;;;;;:::i;2525:143::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2525:143:5;;:::i;:::-;;;;;;;;;;;;;;;;;;3062::8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3062:143:8;;:::i;2176:168:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2176:168:5;;:::i;1815:145::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1815:145:5;-1:-1:-1;;;;;1815:145:5;;:::i;1532:81:8:-;;;:::i;4092:209:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4092:209:5;;;;;;;;;;:::i;7018:275::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;7018:275:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;7018:275:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7018:275:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7018:275:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;7018:275:5;;-1:-1:-1;7018:275:5;;-1:-1:-1;;;;;7018:275:5:i;1809:143:8:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1809:143:8;;:::i;1345:152:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1345:152:1;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1345:152:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1345:152:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1345:152:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1345:152:1;;-1:-1:-1;1345:152:1;;-1:-1:-1;;;;;1345:152:1:i;4618:144:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4618:144:5;;;;;;;;;;:::i;864:207:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;864:207:1;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;864:207:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;864:207:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;864:207:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;864:207:1;;-1:-1:-1;864:207:1;;-1:-1:-1;;;;;864:207:1:i;1354:77:8:-;1420:5;1413:12;;;;;;;;-1:-1:-1;;1413:12:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1391:13;;1413:12;;1420:5;;1413:12;;1420:5;1413:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1354:77;;:::o;3691:113:5:-;3751:7;3774:24;;;:14;:24;;;;;;-1:-1:-1;;;;;3774:24:5;;3691:113::o;3091:364::-;3153:13;3169:17;3177:8;3169:7;:17::i;:::-;3153:33;;3208:5;-1:-1:-1;;;;;3201:12:5;:3;-1:-1:-1;;;;;3201:12:5;;;3193:21;;;;;;3229:10;-1:-1:-1;;;;;3229:19:5;;;;:58;;;3252:35;3269:5;3276:10;3252:16;:35::i;:::-;3221:67;;;;;;3334:1;3301:21;3313:8;3301:11;:21::i;:::-;-1:-1:-1;;;;;3301:35:5;;;:56;;;-1:-1:-1;;;;;;3340:17:5;;;;3301:56;3297:153;;;3368:24;;;;:14;:24;;;;;;;;;:30;;-1:-1:-1;;;;;;3368:30:5;-1:-1:-1;;;;;3368:30:5;;;;;;;;;3412;;;;;;;3368;;3412;;;;;;;;;;;;3297:153;3091:364;;;:::o;2641:89:8:-;2708:9;:16;2641:89;:::o;5194:325:5:-;5281:8;1566:39;1584:10;1596:8;1566:17;:39::i;:::-;1558:48;;;;;;-1:-1:-1;;;;;5306:19:5;;5298:28;;;;;;-1:-1:-1;;;;;5341:17:5;;5333:26;;;;;;5368:30;5382:5;5389:8;5368:13;:30::i;:::-;5405:32;5421:5;5428:8;5405:15;:32::i;:::-;5444:25;5455:3;5460:8;5444:10;:25::i;:::-;5499:3;-1:-1:-1;;;;;5483:30:5;5492:5;-1:-1:-1;;;;;5483:30:5;;5504:8;5483:30;;;;;;;;;;;;;;;;;;5194:325;;;;:::o;2316:180:8:-;2398:7;2431:17;2441:6;2431:9;:17::i;:::-;2422:6;:26;2414:35;;;;;;-1:-1:-1;;;;;2463:19:8;;;;;;:11;:19;;;;;:27;;2483:6;;2463:27;;;;;;;;;;;;;;2456:34;;2316:180;;;;:::o;6139:189:5:-;6260:8;1566:39;1584:10;1596:8;1566:17;:39::i;:::-;1558:48;;;;;;6280:42;6297:5;6304:3;6309:8;6280:42;;;;;;;;;;;;:16;:42::i;:::-;6139:189;;;;:::o;2525:143::-;2580:4;2609:20;;;;;;;;;;;-1:-1:-1;;;;;2609:20:5;2643:19;;;2525:143::o;3062::8:-;3121:7;3154:13;:11;:13::i;:::-;3145:6;:22;3137:31;;;;;;3182:9;3192:6;3182:17;;;;;;;;;;;;;;;;3175:24;;3062:143;;;:::o;2176:168:5:-;2232:7;2264:20;;;;;;;;;;;-1:-1:-1;;;;;2264:20:5;2299:19;2291:28;;;;;;2333:5;2176:168;-1:-1:-1;;2176:168:5:o;1815:145::-;1871:7;-1:-1:-1;;;;;1895:20:5;;1887:29;;;;;;-1:-1:-1;;;;;;1930:24:5;;;;;:16;:24;;;;;;;1815:145::o;1532:81:8:-;1600:7;1593:14;;;;;;;;-1:-1:-1;;1593:14:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1571:13;;1593:14;;1600:7;;1593:14;;1600:7;1593:14;;;;;;;;;;;;;;;;;;;;;;;;4092:209:5;-1:-1:-1;;;;;4170:17:5;;4177:10;4170:17;;4162:26;;;;;;4213:10;4195:29;;;;:17;:29;;;;;;;;-1:-1:-1;;;;;4195:34:5;;;;;;;;;;;;:46;;-1:-1:-1;;4195:46:5;;;;;;;;;;4253:42;;;;;;;4195:34;;4213:10;4253:42;;;;;;;;;;;4092:209;;:::o;7018:275::-;7164:8;1566:39;1584:10;1596:8;1566:17;:39::i;:::-;1558:48;;;;;;7184:34;7197:5;7204:3;7209:8;7184:12;:34::i;:::-;7233:53;7258:5;7265:3;7270:8;7280:5;7233:24;:53::i;:::-;7225:62;;;;;;7018:275;;;;;:::o;1809:143:8:-;1866:13;1896:16;1903:8;1896:6;:16::i;:::-;1888:25;;;;;;1927:19;;;;:9;:19;;;;;;;;;1920:26;;;;;;-1:-1:-1;;1920:26:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1927:19;;1920:26;;1927:19;1920:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1809:143;;;:::o;1345:152:1:-;1423:4;1439:28;1452:8;1462:4;1439:12;:28::i;:::-;-1:-1:-1;1485:4:1;1345:152;;;;:::o;4618:144:5:-;-1:-1:-1;;;;;4720:25:5;;;4700:4;4720:25;;;:17;:25;;;;;;;;:36;;;;;;;;;;;;;;;4618:144::o;864:207:1:-;942:27;948:10;960:8;942:5;:27::i;:::-;980:31;996:8;1006:4;980:15;:31::i;:::-;-1:-1:-1;1027:36:1;;;1042:10;1027:36;;;;;;;;;;;;;;;;;;;;;864:207;;:::o;7649:243:5:-;7735:4;7748:13;7764:17;7772:8;7764:7;:17::i;:::-;7748:33;;7807:5;-1:-1:-1;;;;;7795:17:5;:8;-1:-1:-1;;;;;7795:17:5;;:54;;;;7841:8;-1:-1:-1;;;;;7816:33:5;:21;7828:8;7816:11;:21::i;:::-;-1:-1:-1;;;;;7816:33:5;;7795:54;:91;;;;7853:33;7870:5;7877:8;7853:16;:33::i;:::-;7788:98;7649:243;-1:-1:-1;;;;7649:243:5:o;8978:271::-;9080:6;-1:-1:-1;;;;;9059:27:5;:17;9067:8;9059:7;:17::i;:::-;-1:-1:-1;;;;;9059:27:5;;9051:36;;;;;;9134:1;9098:24;;;:14;:24;;;;;;-1:-1:-1;;;;;9098:24:5;:38;9094:150;;9182:1;9147:24;;;:14;:24;;;;;;;;:37;;-1:-1:-1;;;;;;9147:37:5;;;9198:38;;;;;;;-1:-1:-1;;;;;9198:38:5;;;;;;;;;;;9094:150;8978:271;;:::o;4357:872:8:-;4431:38;4453:5;4460:8;4431:21;:38::i;:::-;4478:18;4499:26;;;:16;:26;;;;;;;;;-1:-1:-1;;;;;4557:18:8;;;;:11;:18;;;;;:25;4499:26;;4478:18;4557:32;;4587:1;4557:32;:29;:32;:::i;:::-;-1:-1:-1;;;;;4616:18:8;;4596:17;4616:18;;;:11;:18;;;;;:34;;4532:57;;-1:-1:-1;4596:17:8;;4532:57;;4616:34;;;;;;;;;;;;;;4596:54;;4692:9;4659:11;:18;4671:5;-1:-1:-1;;;;;4659:18:8;-1:-1:-1;;;;;4659:18:8;;;;;;;;;;;;4678:10;4659:30;;;;;;;;;;;;;;;;;;;:42;;;;-1:-1:-1;;;;;4708:18:8;;;;:11;:18;;;;;;:34;;4727:14;;4708:34;;;;;;;;;;;;;;;;;:38;;;;-1:-1:-1;;;;;5112:18:8;;;;:11;:18;;;;;;:27;;;;;-1:-1:-1;;5112:27:8;;;:::i;:::-;-1:-1:-1;5175:1:8;5146:26;;;:16;:26;;;;;;:30;;;5183:27;;;;;;:40;-1:-1:-1;;4357:872:8:o;3844:231::-;3911:31;3928:3;3933:8;3911:16;:31::i;:::-;-1:-1:-1;;;;;3966:16:8;;;3949:14;3966:16;;;:11;:16;;;;;;;;:23;;39:1:-1;23:18;;45:23;;3996:31:8;;;;;;;;;;;4034:26;;;:16;:26;;;;;:35;3844:231::o;10737:349:5:-;10890:4;10911:16;:3;-1:-1:-1;;;;;10911:14:5;;:16::i;:::-;10906:51;;-1:-1:-1;10945:4:5;10938:11;;10906:51;10979:60;;-1:-1:-1;;;10979:60:5;;-1:-1:-1;;;;;10979:60:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10963:13;;10979:36;;;;;;11016:5;;11023:8;;11033:5;;10979:60;;;;;;;;;;10963:13;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;10979:60:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10979:60:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10979:60:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10979:60:5;-1:-1:-1;;;;;;11054:25:5;-1:-1:-1;;;11054:25:5;;-1:-1:-1;;10737:349:5;;;;;;:::o;3438:140:8:-;3522:16;3529:8;3522:6;:16::i;:::-;3514:25;;;;;;3546:19;;;;:9;:19;;;;;;;;:26;;;;;;;;:::i;5498:177::-;5560:26;5572:3;5577:8;5560:11;:26::i;:::-;5622:9;:16;;5595:24;;;;:14;:24;;;;;:43;;;39:1:-1;23:18;;45:23;;5645:24:8;;;;;;;-1:-1:-1;5498:177:8:o;10005:218:5:-;10108:5;-1:-1:-1;;;;;10087:26:5;:17;10095:8;10087:7;:17::i;:::-;-1:-1:-1;;;;;10087:26:5;;10079:35;;;;;;-1:-1:-1;;;;;10147:23:5;;;;;;:16;:23;;;;;;:30;;10175:1;10147:30;:27;:30;:::i;:::-;-1:-1:-1;;;;;10121:23:5;;;;;;;:16;:23;;;;;;;;:56;;;;10184:20;;;;;;;;:33;;-1:-1:-1;;;;;;10184:33:5;;;10005:218::o;876:113:12:-;934:7;962:1;957;:6;;950:14;;;;-1:-1:-1;978:5:12;;;876:113::o;9515:208:5:-;9622:1;9590:20;;;;;;;;;;;-1:-1:-1;;;;;9590:20:5;:34;9582:43;;;;;;9632:10;:20;;;;;;;;;;;:26;;-1:-1:-1;;;;;;9632:26:5;-1:-1:-1;;;;;9632:26:5;;;;;;;;9689:21;;:16;:21;;;;;;:28;;-1:-1:-1;9689:25:5;:28::i;:::-;-1:-1:-1;;;;;9665:21:5;;;;;;;:16;:21;;;;;:52;;;;-1:-1:-1;9515:208:5:o;453:578:10:-;933:17;1017:8;;;453:578::o;8149:173:5:-;-1:-1:-1;;;;;8219:17:5;;8211:26;;;;;;8244:25;8255:3;8260:8;8244:10;:25::i;:::-;8281:35;;;;;;;;-1:-1:-1;;;;;8281:35:5;;;8298:1;;8281:35;;;;;;;;;8149:173;;:::o;1056:133:12:-;1114:7;1142:5;;;1161:6;;;;1154:14;;;;1182:1;1056:133;-1:-1:-1;;;1056:133:12:o;272:1465:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;272:1465:1;;;-1:-1:-1;272:1465:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.16;\r\nimport \"./ERC721/ERC721Token.sol\";\r\n\r\n/**\r\n * @title Repository of ERC721 Deeds\r\n * This contract contains the list of deeds registered by users.\r\n * This is a demo to show how tokens (deeds) can be minted and added \r\n * to the repository.\r\n */\r\ncontract DeedRepository is ERC721Token {\r\n\r\n\r\n    /**\r\n    * @dev Created a DeedRepository with a name and symbol\r\n    * @param _name string represents the name of the repository\r\n    * @param _symbol string represents the symbol of the repository\r\n    */\r\n    constructor(string memory _name, string memory _symbol) \r\n        public ERC721Token(_name, _symbol) {}\r\n    \r\n    /**\r\n    * @dev Public function to register a new deed\r\n    * @dev Call the ERC721Token minter\r\n    * @param _tokenId uint256 represents a specific deed\r\n    * @param _uri string containing metadata/uri\r\n    */\r\n    function registerDeed(uint256 _tokenId, string memory _uri) public {\r\n        _mint(msg.sender, _tokenId);\r\n        addDeedMetadata(_tokenId, _uri);\r\n        emit DeedRegistered(msg.sender, _tokenId);\r\n    }\r\n\r\n    /**\r\n    * @dev Public function to add metadata to a deed\r\n    * @param _tokenId represents a specific deed\r\n    * @param _uri text which describes the characteristics of a given deed\r\n    * @return whether the deed metadata was added to the repository\r\n    */\r\n    function addDeedMetadata(uint256 _tokenId, string memory _uri) public returns(bool){\r\n        _setTokenURI(_tokenId, _uri);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * @dev Event is triggered if deed/token is registered\r\n    * @param _by address of the registrar\r\n    * @param _tokenId uint256 represents a specific deed\r\n    */\r\n    event DeedRegistered(address _by, uint256 _tokenId);\r\n}\r\n",
  "sourcePath": "E:\\CPSC 559-02 Final\\auction-final-project\\backend\\contracts\\DeedRepository.sol",
  "ast": {
    "absolutePath": "project:/contracts/DeedRepository.sol",
    "exportedSymbols": {
      "DeedRepository": [
        763
      ]
    },
    "id": 764,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 699,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "project:/contracts/ERC721/ERC721Token.sol",
        "file": "./ERC721/ERC721Token.sol",
        "id": 700,
        "nodeType": "ImportDirective",
        "scope": 764,
        "sourceUnit": 1942,
        "src": "26:34:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 701,
              "name": "ERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1941,
              "src": "299:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Token_$1941",
                "typeString": "contract ERC721Token"
              }
            },
            "id": 702,
            "nodeType": "InheritanceSpecifier",
            "src": "299:11:1"
          }
        ],
        "contractDependencies": [
          816,
          836,
          843,
          950,
          1533,
          1941
        ],
        "contractKind": "contract",
        "documentation": "@title Repository of ERC721 Deeds\nThis contract contains the list of deeds registered by users.\nThis is a demo to show how tokens (deeds) can be minted and added \nto the repository.",
        "fullyImplemented": true,
        "id": 763,
        "linearizedBaseContracts": [
          763,
          1941,
          1533,
          843,
          836,
          816,
          950
        ],
        "name": "DeedRepository",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 713,
              "nodeType": "Block",
              "src": "634:2:1",
              "statements": []
            },
            "documentation": "@dev Created a DeedRepository with a name and symbol\n@param _name string represents the name of the repository\n@param _symbol string represents the symbol of the repository",
            "id": 714,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 709,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 704,
                    "src": "618:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 710,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 706,
                    "src": "625:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 711,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 708,
                  "name": "ERC721Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1941,
                  "src": "606:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Token_$1941_$",
                    "typeString": "type(contract ERC721Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "606:27:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 704,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 714,
                  "src": "545:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 703,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 706,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 714,
                  "src": "566:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 705,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "566:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "544:44:1"
            },
            "returnParameters": {
              "id": 712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "634:0:1"
            },
            "scope": 763,
            "src": "533:103:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 738,
              "nodeType": "Block",
              "src": "931:140:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 722,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2197,
                          "src": "948:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "948:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 724,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 716,
                        "src": "960:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 721,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1861
                      ],
                      "referencedDeclaration": 1861,
                      "src": "942:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "942:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 726,
                  "nodeType": "ExpressionStatement",
                  "src": "942:27:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 728,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 716,
                        "src": "996:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 729,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 718,
                        "src": "1006:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 727,
                      "name": "addDeedMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 756,
                      "src": "980:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint256,string memory) returns (bool)"
                      }
                    },
                    "id": 730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "980:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 731,
                  "nodeType": "ExpressionStatement",
                  "src": "980:31:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 733,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2197,
                          "src": "1042:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1042:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 735,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 716,
                        "src": "1054:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 732,
                      "name": "DeedRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 762,
                      "src": "1027:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1027:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 737,
                  "nodeType": "EmitStatement",
                  "src": "1022:41:1"
                }
              ]
            },
            "documentation": "@dev Public function to register a new deed\n@dev Call the ERC721Token minter\n@param _tokenId uint256 represents a specific deed\n@param _uri string containing metadata/uri",
            "id": 739,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerDeed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 716,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 739,
                  "src": "886:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 715,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "886:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 718,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 739,
                  "src": "904:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 717,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "904:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "885:38:1"
            },
            "returnParameters": {
              "id": 720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "931:0:1"
            },
            "scope": 763,
            "src": "864:207:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 755,
              "nodeType": "Block",
              "src": "1428:69:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 749,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 741,
                        "src": "1452:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 750,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 743,
                        "src": "1462:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 748,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1725,
                      "src": "1439:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1439:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 752,
                  "nodeType": "ExpressionStatement",
                  "src": "1439:28:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1485:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 747,
                  "id": 754,
                  "nodeType": "Return",
                  "src": "1478:11:1"
                }
              ]
            },
            "documentation": "@dev Public function to add metadata to a deed\n@param _tokenId represents a specific deed\n@param _uri text which describes the characteristics of a given deed\n@return whether the deed metadata was added to the repository",
            "id": 756,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addDeedMetadata",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 741,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 756,
                  "src": "1370:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 740,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 743,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 756,
                  "src": "1388:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 742,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1388:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1369:38:1"
            },
            "returnParameters": {
              "id": 747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 746,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 756,
                  "src": "1423:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1423:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1422:6:1"
            },
            "scope": 763,
            "src": "1345:152:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": "@dev Event is triggered if deed/token is registered\n@param _by address of the registrar\n@param _tokenId uint256 represents a specific deed",
            "id": 762,
            "name": "DeedRegistered",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 758,
                  "indexed": false,
                  "name": "_by",
                  "nodeType": "VariableDeclaration",
                  "scope": 762,
                  "src": "1703:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 757,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1703:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 760,
                  "indexed": false,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 762,
                  "src": "1716:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 759,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1716:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1702:31:1"
            },
            "src": "1682:52:1"
          }
        ],
        "scope": 764,
        "src": "272:1465:1"
      }
    ],
    "src": "0:1739:1"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/DeedRepository.sol",
      "exportedSymbols": {
        "DeedRepository": [
          763
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".16"
          ]
        },
        "id": 699,
        "name": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "attributes": {
          "SourceUnit": 1942,
          "absolutePath": "project:/contracts/ERC721/ERC721Token.sol",
          "file": "./ERC721/ERC721Token.sol",
          "scope": 764,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 700,
        "name": "ImportDirective",
        "src": "26:34:1"
      },
      {
        "attributes": {
          "contractDependencies": [
            816,
            836,
            843,
            950,
            1533,
            1941
          ],
          "contractKind": "contract",
          "documentation": "@title Repository of ERC721 Deeds\nThis contract contains the list of deeds registered by users.\nThis is a demo to show how tokens (deeds) can be minted and added \nto the repository.",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            763,
            1941,
            1533,
            843,
            836,
            816,
            950
          ],
          "name": "DeedRepository",
          "scope": 764
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Token",
                  "referencedDeclaration": 1941,
                  "type": "contract ERC721Token"
                },
                "id": 701,
                "name": "UserDefinedTypeName",
                "src": "299:11:1"
              }
            ],
            "id": 702,
            "name": "InheritanceSpecifier",
            "src": "299:11:1"
          },
          {
            "attributes": {
              "documentation": "@dev Created a DeedRepository with a name and symbol\n@param _name string represents the name of the repository\n@param _symbol string represents the symbol of the repository",
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 763,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_name",
                      "scope": 714,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 703,
                        "name": "ElementaryTypeName",
                        "src": "545:6:1"
                      }
                    ],
                    "id": 704,
                    "name": "VariableDeclaration",
                    "src": "545:19:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_symbol",
                      "scope": 714,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 705,
                        "name": "ElementaryTypeName",
                        "src": "566:6:1"
                      }
                    ],
                    "id": 706,
                    "name": "VariableDeclaration",
                    "src": "566:21:1"
                  }
                ],
                "id": 707,
                "name": "ParameterList",
                "src": "544:44:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 712,
                "name": "ParameterList",
                "src": "634:0:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1941,
                      "type": "type(contract ERC721Token)",
                      "value": "ERC721Token"
                    },
                    "id": 708,
                    "name": "Identifier",
                    "src": "606:11:1"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 704,
                      "type": "string memory",
                      "value": "_name"
                    },
                    "id": 709,
                    "name": "Identifier",
                    "src": "618:5:1"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 706,
                      "type": "string memory",
                      "value": "_symbol"
                    },
                    "id": 710,
                    "name": "Identifier",
                    "src": "625:7:1"
                  }
                ],
                "id": 711,
                "name": "ModifierInvocation",
                "src": "606:27:1"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 713,
                "name": "Block",
                "src": "634:2:1"
              }
            ],
            "id": 714,
            "name": "FunctionDefinition",
            "src": "533:103:1"
          },
          {
            "attributes": {
              "documentation": "@dev Public function to register a new deed\n@dev Call the ERC721Token minter\n@param _tokenId uint256 represents a specific deed\n@param _uri string containing metadata/uri",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "registerDeed",
              "scope": 763,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenId",
                      "scope": 739,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 715,
                        "name": "ElementaryTypeName",
                        "src": "886:7:1"
                      }
                    ],
                    "id": 716,
                    "name": "VariableDeclaration",
                    "src": "886:16:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_uri",
                      "scope": 739,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 717,
                        "name": "ElementaryTypeName",
                        "src": "904:6:1"
                      }
                    ],
                    "id": 718,
                    "name": "VariableDeclaration",
                    "src": "904:18:1"
                  }
                ],
                "id": 719,
                "name": "ParameterList",
                "src": "885:38:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 720,
                "name": "ParameterList",
                "src": "931:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                1861
                              ],
                              "referencedDeclaration": 1861,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 721,
                            "name": "Identifier",
                            "src": "942:5:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2197,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 722,
                                "name": "Identifier",
                                "src": "948:3:1"
                              }
                            ],
                            "id": 723,
                            "name": "MemberAccess",
                            "src": "948:10:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 716,
                              "type": "uint256",
                              "value": "_tokenId"
                            },
                            "id": 724,
                            "name": "Identifier",
                            "src": "960:8:1"
                          }
                        ],
                        "id": 725,
                        "name": "FunctionCall",
                        "src": "942:27:1"
                      }
                    ],
                    "id": 726,
                    "name": "ExpressionStatement",
                    "src": "942:27:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 756,
                              "type": "function (uint256,string memory) returns (bool)",
                              "value": "addDeedMetadata"
                            },
                            "id": 727,
                            "name": "Identifier",
                            "src": "980:15:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 716,
                              "type": "uint256",
                              "value": "_tokenId"
                            },
                            "id": 728,
                            "name": "Identifier",
                            "src": "996:8:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 718,
                              "type": "string memory",
                              "value": "_uri"
                            },
                            "id": 729,
                            "name": "Identifier",
                            "src": "1006:4:1"
                          }
                        ],
                        "id": 730,
                        "name": "FunctionCall",
                        "src": "980:31:1"
                      }
                    ],
                    "id": 731,
                    "name": "ExpressionStatement",
                    "src": "980:31:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 762,
                              "type": "function (address,uint256)",
                              "value": "DeedRegistered"
                            },
                            "id": 732,
                            "name": "Identifier",
                            "src": "1027:14:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2197,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 733,
                                "name": "Identifier",
                                "src": "1042:3:1"
                              }
                            ],
                            "id": 734,
                            "name": "MemberAccess",
                            "src": "1042:10:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 716,
                              "type": "uint256",
                              "value": "_tokenId"
                            },
                            "id": 735,
                            "name": "Identifier",
                            "src": "1054:8:1"
                          }
                        ],
                        "id": 736,
                        "name": "FunctionCall",
                        "src": "1027:36:1"
                      }
                    ],
                    "id": 737,
                    "name": "EmitStatement",
                    "src": "1022:41:1"
                  }
                ],
                "id": 738,
                "name": "Block",
                "src": "931:140:1"
              }
            ],
            "id": 739,
            "name": "FunctionDefinition",
            "src": "864:207:1"
          },
          {
            "attributes": {
              "documentation": "@dev Public function to add metadata to a deed\n@param _tokenId represents a specific deed\n@param _uri text which describes the characteristics of a given deed\n@return whether the deed metadata was added to the repository",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addDeedMetadata",
              "scope": 763,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenId",
                      "scope": 756,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 740,
                        "name": "ElementaryTypeName",
                        "src": "1370:7:1"
                      }
                    ],
                    "id": 741,
                    "name": "VariableDeclaration",
                    "src": "1370:16:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_uri",
                      "scope": 756,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 742,
                        "name": "ElementaryTypeName",
                        "src": "1388:6:1"
                      }
                    ],
                    "id": 743,
                    "name": "VariableDeclaration",
                    "src": "1388:18:1"
                  }
                ],
                "id": 744,
                "name": "ParameterList",
                "src": "1369:38:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 756,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 745,
                        "name": "ElementaryTypeName",
                        "src": "1423:4:1"
                      }
                    ],
                    "id": 746,
                    "name": "VariableDeclaration",
                    "src": "1423:4:1"
                  }
                ],
                "id": 747,
                "name": "ParameterList",
                "src": "1422:6:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1725,
                              "type": "function (uint256,string memory)",
                              "value": "_setTokenURI"
                            },
                            "id": 748,
                            "name": "Identifier",
                            "src": "1439:12:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 741,
                              "type": "uint256",
                              "value": "_tokenId"
                            },
                            "id": 749,
                            "name": "Identifier",
                            "src": "1452:8:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 743,
                              "type": "string memory",
                              "value": "_uri"
                            },
                            "id": 750,
                            "name": "Identifier",
                            "src": "1462:4:1"
                          }
                        ],
                        "id": 751,
                        "name": "FunctionCall",
                        "src": "1439:28:1"
                      }
                    ],
                    "id": 752,
                    "name": "ExpressionStatement",
                    "src": "1439:28:1"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 747
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 753,
                        "name": "Literal",
                        "src": "1485:4:1"
                      }
                    ],
                    "id": 754,
                    "name": "Return",
                    "src": "1478:11:1"
                  }
                ],
                "id": 755,
                "name": "Block",
                "src": "1428:69:1"
              }
            ],
            "id": 756,
            "name": "FunctionDefinition",
            "src": "1345:152:1"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": "@dev Event is triggered if deed/token is registered\n@param _by address of the registrar\n@param _tokenId uint256 represents a specific deed",
              "name": "DeedRegistered"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "_by",
                      "scope": 762,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 757,
                        "name": "ElementaryTypeName",
                        "src": "1703:7:1"
                      }
                    ],
                    "id": 758,
                    "name": "VariableDeclaration",
                    "src": "1703:11:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "_tokenId",
                      "scope": 762,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 759,
                        "name": "ElementaryTypeName",
                        "src": "1716:7:1"
                      }
                    ],
                    "id": 760,
                    "name": "VariableDeclaration",
                    "src": "1716:16:1"
                  }
                ],
                "id": 761,
                "name": "ParameterList",
                "src": "1702:31:1"
              }
            ],
            "id": 762,
            "name": "EventDefinition",
            "src": "1682:52:1"
          }
        ],
        "id": 763,
        "name": "ContractDefinition",
        "src": "272:1465:1"
      }
    ],
    "id": 764,
    "name": "SourceUnit",
    "src": "0:1739:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x4B5C7cF6d294d992Ae6bB4b059277F9164911CDb",
      "transactionHash": "0xf8e1ee0f2960465e82c8d4690a47589f4b4d88f01030c8ede8527099468e69ba"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-05-06T22:17:19.563Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "addDeedMetadata(uint256,string)": {
        "details": "Public function to add metadata to a deed",
        "params": {
          "_tokenId": "represents a specific deed",
          "_uri": "text which describes the characteristics of a given deed"
        },
        "return": "whether the deed metadata was added to the repository"
      },
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token IDThe zero address indicates there is no approved address.There can only be one approved address per token at a given time.Can only be called by the token owner or an approved operator.",
        "params": {
          "_to": "address to be approved for the given token ID",
          "_tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "_owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "constructor": {
        "details": "Created a DeedRepository with a name and symbol",
        "params": {
          "_name": "string represents the name of the repository",
          "_symbol": "string represents the symbol of the repository"
        }
      },
      "exists(uint256)": {
        "details": "Returns whether the specified token exists",
        "params": {
          "_tokenId": "uint256 ID of the token to query the existance of"
        },
        "return": "whether the token exists"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set",
        "params": {
          "_tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for a the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "_operator": "operator address which you want to query the approval of",
          "_owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "_tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "owner address currently marked as the owner of the given token ID"
      },
      "registerDeed(uint256,string)": {
        "details": "Public function to register a new deedCall the ERC721Token minter",
        "params": {
          "_tokenId": "uint256 represents a specific deed",
          "_uri": "string containing metadata/uri"
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another addressIf the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`; otherwise, the transfer is reverted.Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_from": "current owner of the token",
          "_to": "address to receive the ownership of the given token ID",
          "_tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another addressIf the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`; otherwise, the transfer is reverted.Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "_from": "current owner of the token",
          "_to": "address to receive the ownership of the given token ID",
          "_tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operatorAn operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "_approved": "representing the status of the approval to be set",
          "_to": "operator address to set the approval"
        }
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contractReverts if the index is greater or equal to the total number of tokens",
        "params": {
          "_index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "_index": "uint256 representing the index to be accessed of the requested tokens list",
          "_owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token IDThrows if the token ID does not exist. May return an empty string.",
        "params": {
          "_tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another addressUsage of this method is discouraged, use `safeTransferFrom` whenever possibleRequires the msg sender to be the owner, approved, or operator",
        "params": {
          "_from": "current owner of the token",
          "_to": "address to receive the ownership of the given token ID",
          "_tokenId": "uint256 ID of the token to be transferred"
        }
      }
    },
    "title": "Repository of ERC721 Deeds This contract contains the list of deeds registered by users. This is a demo to show how tokens (deeds) can be minted and added  to the repository."
  },
  "userdoc": {
    "methods": {}
  }
}